(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{522:function(t,e,a){"use strict";a.r(e);var v=a(4),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[t._v("#")]),t._v(" 目的")]),t._v(" "),a("p",[t._v("作为一名计算机工程师，经常编写代码，但是常常会出现很多系统方面的问题。却不知道该如何去解决。也不了解自己的代码于底层操作系统的关系，自己编写的代码如何通过操作系统去执行然后返回我们需要的结果。因此系统通过<<深入理解操作系统>>一书有个初步的认识。对于自己编写更优质的代码和解决一些代码的问题时有更好的处理方式。")]),t._v(" "),a("h2",{attrs:{id:"目录介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录介绍"}},[t._v("#")]),t._v(" 目录介绍")]),t._v(" "),a("p",[t._v('一. 计算机系统漫游：通过研究"hello，world"这个简单程序的生命周期，介绍计算机系统的主要概念和主题。')]),t._v(" "),a("p",[t._v("二. 信息的表示和处理：讲述计算机的算术运算，重点描述了会对程序员有影响的无符号数和数的补码表示的特性。")]),t._v(" "),a("p",[t._v("三. 程序的机器级表示：如何阅读C编译器生成的x86-64机器代码")]),t._v(" "),a("p",[t._v('四. 处理器体系结构：讲述基本的组合和时序逻辑元素，并展示这些元素如何在数据通路中组合到一起，来执行x86-64指令集的一个称为"Y86-64"的简化子集。')]),t._v(" "),a("p",[t._v("五. 优化程序性能：介绍提高代码性能的技术。")]),t._v(" "),a("p",[t._v("六. 存储器层次结构：对应用程序员来说，存储器系统是计算器系统中最直接可见的部分之一。")]),t._v(" "),a("p",[t._v("七. 链接：主要介绍静态和动态链接。")]),t._v(" "),a("p",[t._v("八. 异常控制流：介绍异常控制流的一般概念。")]),t._v(" "),a("p",[t._v("九. 虚拟内存：讲述虚拟内存系统的工作原理以及特性。")]),t._v(" "),a("p",[t._v("十. 系统级I/O：讲述Unix I/O的基本概念。")]),t._v(" "),a("p",[t._v("十一. 网络编程：将整个流程中讲的知识点进行串联。")]),t._v(" "),a("p",[t._v("十二. 并发编程.")]),t._v(" "),a("h2",{attrs:{id:"第一章-计算机系统漫游"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-计算机系统漫游"}},[t._v("#")]),t._v(" 第一章 计算机系统漫游")]),t._v(" "),a("p",[t._v("从整体上大致过一下操作系统，初步了解什么是计算机系统。")]),t._v(" "),a("h3",{attrs:{id:"计算机系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机系统"}},[t._v("#")]),t._v(" 计算机系统")]),t._v(" "),a("p",[t._v("由硬件和系统软件组成，共同工作来运行应用程序。")]),t._v(" "),a("h3",{attrs:{id:"程序运行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序运行流程"}},[t._v("#")]),t._v(" 程序运行流程")]),t._v(" "),a("p",[t._v("以下讲介绍计算机操作系统如何来运行c语言的hello.c文件的。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, world\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上述hello.c源文件实际是一个由值0和1组成的位(比特bit)序列，8个位一组称为字节。通过ASCII标准来表示文本字符，因而hello.c也被成为文本文件。")]),t._v(" "),a("p",[t._v("而操作系统识别的为0或1组成的二进制文件。所以我们需要了解一个文本文件转换成二进制文件的过程。")]),t._v(" "),a("p",[t._v("我们常在Unix系统上，使用如下命令执行。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gcc -o hello hello.c\n")])])]),a("p",[t._v("其含义是，通过gcc编译器读取源程序文件hello.c,并把它翻译成一个这执行的目标文件hello。")]),t._v(" "),a("p",[t._v("这个过程分为四个阶段，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E7%BC%96%E8%AF%91%E7%B3%BB%E7%BB%9F.png?raw=true",alt:"编译系统"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("预处理阶段。根据#号字符开头的命令，修改源程序。例如hello.c中的第一行的#include<stdio.h>告诉预处理器读取系统文件stdio.h的内容，并把它直接插入程序文本中。得到另一个C程序，是以.i作为文件扩展名。")])]),t._v(" "),a("li",[a("p",[t._v("编译阶段。编译器将文本文件.i翻译成文本文件hello.s。包含汇编语言。")])]),t._v(" "),a("li",[a("p",[t._v("汇编阶段。汇编器将hello.s翻译成机器语言指令。打包成一种叫做可重定位目标程序的个数，保存在hello.o中。此时为一个二进制文件。")])]),t._v(" "),a("li",[a("p",[t._v("链接阶段。将多个.o文件合并成一个hello文件，可执行文件，并加载到内存中。由系统调用。")])])]),t._v(" "),a("p",[t._v("此时生成了一个hello的可执行文件，使用如下命令即可进行执行。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./hello\n\n输出:\nhello, world\n\n")])])]),a("p",[t._v("而此时只是相当简单的命令，但是在操作系统内部其实发生了很多事情。")]),t._v(" "),a("h3",{attrs:{id:"系统的硬件组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统的硬件组成"}},[t._v("#")]),t._v(" 系统的硬件组成")]),t._v(" "),a("p",[t._v("在此之前，我们需要了解下系统的硬件组成，才能更好的理解其运行流程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%88%90.png?raw=true",alt:"硬件组成"}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("总线：贯穿整个系统的是一组电子管道。携带信息字节并负责在各个部件间传递。一般传递字节块，即字，而字长在各个操作系统中不是定值。")])]),t._v(" "),a("li",[a("p",[t._v("I/O(输入/输出)设备是系统与外部世界的联系通道，输入设备(键盘，鼠标)，输出设备(显示器)，存储设备(磁盘)。")])]),t._v(" "),a("li",[a("p",[t._v("主存\n主存是一个临时的存储设备，在处理器执行程序时，用来存放程序和程序处理的数据。物理上来说，是一组动态随机存储存储器(DRAM)芯片组成，逻辑上来说，是一个线性的字节数组，每个字节都有其唯一的地址(数组索引)。")])]),t._v(" "),a("li",[a("p",[t._v("处理器\n中央处理单元(CPU),简称处理器，解释存储在主存中指令的引擎。处理器的核心是一个大小为一个字的存储设备(寄存器)，称为程序计数器。")])])]),t._v(" "),a("p",[t._v("而在从键盘上输入./hello的时候，其硬件上的执行流程如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E4%BB%8E%E9%94%AE%E7%9B%98%E4%B8%8A%E8%AF%BB%E5%8F%96hello%E5%91%BD%E4%BB%A4.png?raw=true",alt:"从键盘上读取hello命令"}})]),t._v(" "),a("p",[t._v("通过USB控制器获取用户输入，然后通过总线接口将命令读入寄存器，再将其放到内存中。")]),t._v(" "),a("p",[t._v("后续通过一系列指令加载可执行的hello文件，将文件中的代码和数据从磁盘复制到主存中。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E4%BB%8E%E7%A3%81%E7%9B%98%E5%8A%A0%E8%BD%BD%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E5%88%B0%E4%B8%BB%E5%AD%98.png?raw=true",alt:"从磁盘加载可执行文件到主存"}})]),t._v(" "),a("p",[t._v("加载完成后，处理器就会执行hello程序。将结果显示传递给寄存器，然后从寄存器复制到显示屏上进行输出。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E5%B0%86%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BB%8E%E5%AD%98%E5%82%A8%E5%99%A8%E5%86%99%E5%88%B0%E6%98%BE%E7%A4%BA%E5%99%A8.png?raw=true",alt:"将输出字符串从存储器写到显示器"}})]),t._v(" "),a("p",[t._v("以上就是一个文件运行时操作系统的主要流程。")]),t._v(" "),a("ul",[a("li",[t._v("高速缓存")])]),t._v(" "),a("p",[t._v("我们发现在操作系统处理过程中，花费了大量时间讲一个信息从一个地方复制到另一个地方。")]),t._v(" "),a("p",[t._v("而根据机械的原理，较大的存储设备要比较小的存储设备运行的慢，而快速设备的造价远高于同类型的低速设备。")]),t._v(" "),a("p",[t._v("寄存器文件只能存储几百字节的信息，而主存里可存放几十亿字节。处理器从寄存器文件中读取数据的速度比从主存中读取几乎要快100倍。")]),t._v(" "),a("p",[t._v("因为针对处理器与主存之间的差异，采用更小，更快的存储设备，即高速缓存存储器，作为暂时的存储区域，来存储近期可能会用到的信息，减少到主存的的读取次数。")]),t._v(" "),a("p",[t._v("在处理器中和较大较慢的设备(或程序)之间插入一个更小更快的存储设备(或程序)的思想已经相对普遍，实际应用中也使用了较多类似方法。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E4%B8%80%E4%B8%AA%E5%AD%98%E5%82%A8%E5%99%A8%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84%E7%9A%84%E7%A4%BA%E4%BE%8B.png?raw=true",alt:"一个存储器层次结构的示例"}})]),t._v(" "),a("h3",{attrs:{id:"操作系统与硬件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统与硬件"}},[t._v("#")]),t._v(" 操作系统与硬件")]),t._v(" "),a("p",[t._v("通过上面读取例子，我们可看到，hello程序并没有直接访问键盘，显示器，磁盘，主存。这一切可实现的基础就是由操作系统提供的服务。因此操作系统时应用程序和硬件之间的一层软件。")]),t._v(" "),a("p",[t._v("操作系统的两个基本功能：1. 防止硬件被失控的应用程序滥用。2. 向应用程序提供简单一致的机制来控制设备。")]),t._v(" "),a("p",[t._v("而操作系统通过进程，虚拟内存和文件来实现这两个功能。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8F%90%E4%BE%9B%E7%9A%84%E6%8A%BD%E8%B1%A1%E8%A1%A8%E7%A4%BA.png?raw=true",alt:"操作系统提供的抽象表示"}})]),t._v(" "),a("ul",[a("li",[t._v("进程")])]),t._v(" "),a("p",[t._v("上述提到的可执行文件hello，就是一个进程。根据字面意思理解则为一个正在运行的程序。对于单核CPU来说，同一时间点，只能有一个进程是运行状态的。")]),t._v(" "),a("ul",[a("li",[t._v("线程")])]),t._v(" "),a("p",[t._v("进程中有多个线程。")]),t._v(" "),a("ul",[a("li",[t._v("虚拟内存")])]),t._v(" "),a("p",[t._v("每个进程看到的内存都是一致的，成为虚拟地址空间。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E8%BF%9B%E7%A8%8B%E7%9A%84%E8%99%9A%E6%8B%9F%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4.png?raw=true",alt:"进程的虚拟地址空间"}})]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 程序代码和数据。代码是从同一个固定地址开始。\n\n- 堆。代码和数据区后紧随着的是运行时堆。\n\n- 共享库。存放标准库和数学库这种共享库的代码和数据的区域\n\n- 栈。用户虚拟地址空间顶部为用户栈，编译器用它来实现函数调用。\n\n- 内核虚拟内存。地址空间顶部的区域为内核保留使用。\n")])])]),a("ul",[a("li",[t._v("文件")])]),t._v(" "),a("p",[t._v("字节序列。")]),t._v(" "),a("h3",{attrs:{id:"系统之间的网络通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统之间的网络通信"}},[t._v("#")]),t._v(" 系统之间的网络通信")]),t._v(" "),a("p",[t._v("而为了能让系统之间可以进行通信。出现了网络适配器。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/%E7%BD%91%E7%BB%9C%E4%B9%9F%E6%98%AF%E4%B8%80%E7%A7%8DIO%E8%AE%BE%E5%A4%87.png?raw=true",alt:"网络适配器"}})]),t._v(" "),a("h3",{attrs:{id:"介绍系统中的部分概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍系统中的部分概念"}},[t._v("#")]),t._v(" 介绍系统中的部分概念")]),t._v(" "),a("ul",[a("li",[t._v("Amdahl定律")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/asi-life/asiLifePic/blob/master/os/amdahl%E5%AE%9A%E5%BE%8B.png?raw=true",alt:"Amdahl定律"}})]),t._v(" "),a("ul",[a("li",[t._v("并发和并行")])]),t._v(" "),a("p",[t._v("并发：指一个同时具有多个活动的系统。也是指两个或多个程序再同一时间间隔内发生。")]),t._v(" "),a("p",[t._v("并行：指用并发来使一个系统运行得更快。同一个时间点有两个或多个程序运行。")]),t._v(" "),a("h2",{attrs:{id:"第二章-信息的表示和处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章-信息的表示和处理"}},[t._v("#")]),t._v(" 第二章 信息的表示和处理")]),t._v(" "),a("h3",{attrs:{id:"信息存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信息存储"}},[t._v("#")]),t._v(" 信息存储")]),t._v(" "),a("p",[t._v("计算机中，使用块作为最小的可寻址的内存单位，而不是访问内存中的单独的位，一个块为是8个位组成。即从二进制的 0000 0000 - 1111 1111. 即表示 0 - 255.")]),t._v(" "),a("p",[t._v("机器级程序将内存是为一个非常大的字节数组，称为虚拟内存。内存中的每个字节都由一个唯一的数字来标识，称为它的地址。所有可能地址的集合就称为虚拟地址空间。")]),t._v(" "),a("h4",{attrs:{id:"十六进表示法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十六进表示法"}},[t._v("#")]),t._v(" 十六进表示法")]),t._v(" "),a("p",[t._v("二进制与十进制的转化相对来说比较麻烦。依次通常使用十六进制表示。以0x或0X开头的数字常量被认为是十六进制的值。因为4个位就能表示一个十六进制。")]),t._v(" "),a("p",[t._v("一个二次幂的数转化成十六进制比较快的方法： 当x = 2 ^ n 次方时，即对应1后跟了n个零。而n 可以表示成 i + j * 4.  0 <= i <= 3. 表示 以 1(i = 0), 2(i = 1), 4(i = 2), 8(i = 3) 开头的后面跟了 j 个零的16进制。 如： 2048 = 2 ^ 11次方。n为11. 11 = 3 + 4 * 2。所以其十六进制为：0x 800。")]),t._v(" "),a("h4",{attrs:{id:"字数据的大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字数据的大小"}},[t._v("#")]),t._v(" 字数据的大小")]),t._v(" "),a("p",[t._v("每台计算机都有一个字长，表示指针数据的大小。也就是我们常说的32位计算机和64位计算机。这决定了虚拟地址空间的最大大小。对于一个字长位w位的机器而言，虚拟地址的范围为0 - (2 ^ w - 1)，即程序最多访问2 ^ w个"),a("font",{attrs:{color:"red"}},[t._v("字节")]),t._v("。")],1),t._v(" "),a("p",[t._v("一般64位的计算机兼容32位计算机的程序。")]),t._v(" "),a("p",[t._v("以下位c语言常用类型所占字节。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("有符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("无符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("32位")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("64位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("[signed] char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("unsigned")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int32_t")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("uint32_t")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int64_t")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("uint64_t")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char *")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])])])]),t._v(" "),a("p",[t._v("java基础类型所占字节")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("有符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("32位")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("64位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("byte")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("32")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("32")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("64")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("64")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("32")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("32")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("64")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("64")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")])])])]),t._v(" "),a("h4",{attrs:{id:"寻址和字节顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寻址和字节顺序"}},[t._v("#")]),t._v(" 寻址和字节顺序")]),t._v(" "),a("p",[t._v("语言中的数据存储都有一个地址空间。c中常用查询地址使用&x。对于顺序存储，则只需要直到其最小地址即可。")]),t._v(" "),a("p",[t._v("而字节的存放和读取顺序一般有两种。")]),t._v(" "),a("p",[t._v("例如： 0x 01234567，每个地址存储8位数据。")]),t._v(" "),a("p",[t._v("对于我们而言 01 即为最高位。将01存放到最小的地址上则为 大端法。将最低位67存放在最小的地址上则为小端法。")]),t._v(" "),a("p",[t._v("大端法：从最高有效位到最低有效位的存储方法。")]),t._v(" "),a("p",[t._v("小端法：从最低有效位到最高有效位的存储方法。")]),t._v(" "),a("h4",{attrs:{id:"字符串和布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串和布尔类型"}},[t._v("#")]),t._v(" 字符串和布尔类型")]),t._v(" "),a("p",[t._v("字符串表示需要一个结束标记，常为0x00。")]),t._v(" "),a("p",[t._v("boolean / bool 只有一位，要么为1 要么为0")]),t._v(" "),a("h4",{attrs:{id:"位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[t._v("#")]),t._v(" 位运算")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<<   左移\n>>   右移\n>>>  无符号右移\n&    位与\n|    位或\n~    位非\n^    位异或   a ^ a = 0;\n")])])]),a("p",[t._v("位运算优先级低于 加减法。")]),t._v(" "),a("p",[t._v("使用场景：")]),t._v(" "),a("p",[t._v("判断奇偶数：  x & 1 == 0")]),t._v(" "),a("p",[t._v("交换两者的值：  a ^= b;  b ^= a; a ^= b;")]),t._v(" "),a("p",[t._v("取余： hashmap中hash映射的作用。")]),t._v(" "),a("h3",{attrs:{id:"ieee浮点表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ieee浮点表示"}},[t._v("#")]),t._v(" IEEE浮点表示")]),t._v(" "),a("p",[t._v("V = (-1)^s * M * 2 ^ E的形式来表示一个数：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("符号(sign) s决定这个数是负数(s = 1) 还是整数(s = 0),而对于数值0的符号位解释作为特殊情况处理。")])]),t._v(" "),a("li",[a("p",[t._v("尾数(significand) M是一个二进制小数")])]),t._v(" "),a("li",[a("p",[t._v("阶码 E的作用是对浮点数加权，这个权重是2的E次幂。")])])]),t._v(" "),a("p",[t._v("将浮点数的位表示划分为三个字段：s, exp, frac。")]),t._v(" "),a("p",[t._v("对于float单精度的类型来说32位，s为1位，exp为8位，frac为23位。")]),t._v(" "),a("p",[t._v("对于double双精度的类型来说64位，s为1位，exp为11位，frac为52位。")]),t._v(" "),a("p",[t._v("且exp组合起来可以编码E，frac组合起来编码M，frac为小数计算。")]),t._v(" "),a("p",[t._v("规则化的值：exp的位不全0，也不全为1")]),t._v(" "),a("p",[t._v("不规则化的值：exp的位全为0或全为1")]),t._v(" "),a("p",[t._v("无穷大：exp全为1，且frac的值全为0")]),t._v(" "),a("p",[t._v("NaN：exp全为1，且frac的值不为0.")]),t._v(" "),a("p",[t._v("偏置位：表示exp的位数的最大值，2^k - 1，")]),t._v(" "),a("p",[t._v("规则化情况下：E = exp的值 - 偏置位， M = 1 + frac的值。")]),t._v(" "),a("p",[t._v("非规则化情况下：E = 1 - 偏置位，M = frac")]),t._v(" "),a("h3",{attrs:{id:"c语言中的浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言中的浮点数"}},[t._v("#")]),t._v(" C语言中的浮点数")]),t._v(" "),a("p",[t._v("从int转化为float，数字不会溢出，但可能舍入。")]),t._v(" "),a("p",[t._v("从int或float转为double，没有问题。")]),t._v(" "),a("p",[t._v("从double转为float可能溢出，可能舍入。")]),t._v(" "),a("p",[t._v("float或double转为int，会向0舍入。")]),t._v(" "),a("h2",{attrs:{id:"第三章-程序的机器级表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章-程序的机器级表示"}},[t._v("#")]),t._v(" 第三章 程序的机器级表示")]),t._v(" "),a("h3",{attrs:{id:"机器级代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器级代码"}},[t._v("#")]),t._v(" 机器级代码")]),t._v(" "),a("p",[t._v("计算机系统使用了多种不同形式的抽象，利用更简单的抽象模型来隐藏实现的细节。")]),t._v(" "),a("p",[t._v("机器级编程来说，两种抽象尤为重要:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("指令集体系结构或指令集架构(Instruction Set Architecture,ISA)来定义机器级程序的格式和行为，定义了处理器状态，指令的格式，以及每条指令对状态的影响。")])]),t._v(" "),a("li",[a("p",[t._v("机器级程序使用的内存地址是虚拟地址，提供的内存模型看上去是一个非常大的字节数组。")])])]),t._v(" "),a("p",[t._v("汇编代码是用可读性更好的文本格式表示。使用命令和一系列的寄存器进行处理。")]),t._v(" "),a("p",[t._v('程序计数器(通常称为"PC",在x86-64中用%rip表示),给出将要执行的下一条指令在内存中的地址。')]),t._v(" "),a("p",[t._v("整数寄存器文件包含16个命名的位置，分别存储64位的值。这些寄存器可以存储地址(对应于C语言的指针)或整数数据。有的寄存器被用来记录某些重要的程序状态，而其他寄存器用来保存临时数据，例如过程中的参数和局部变量，以及函数的返回值。")]),t._v(" "),a("p",[t._v("条件码寄存器保存着最近执行的算术或逻辑指令的状态信息。它们用来实现控制或数据流中的条件变化，比如说用来实现if和while语句。")]),t._v(" "),a("p",[t._v("一组向量寄存器可以存放一个或者多个整数或浮点数。")]),t._v(" "),a("h3",{attrs:{id:"数据格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据格式"}},[t._v("#")]),t._v(" 数据格式")]),t._v(" "),a("p",[t._v("C语言数类型在x86-64中的大小。在64位机器中，指针长8字节。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("C声明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Intel数据类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("汇编代码后缀")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("大小(字节)")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("双字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("l")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("四字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("q")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char *")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("四字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("q")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("单精度")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("s")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("双精度")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("l")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])])])]),t._v(" "),a("h3",{attrs:{id:"访问信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问信息"}},[t._v("#")]),t._v(" 访问信息")]),t._v(" "),a("p",[t._v("一个x86-64的中央处理单元包含一组16个存储64位值的通用目的寄存器。这些这些寄存器用来存储整数数据和指针。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("63 - 32")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("31 - 16")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("15 - 8")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("7 - 0")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("常用于")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rax")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%eax")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%ax")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%al")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rab")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%ebx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%bx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%bl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rcx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%ecx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%cx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%cl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第4个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rdx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%edx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%dx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%dl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第3个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rsi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%esi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%si")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%sil")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第2个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rdi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%edi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%di")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%dil")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第1个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rbp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%ebp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%bp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%bpl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%rsp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%esp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%sp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%spl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("栈指针")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第5个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("第6个参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r10")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r10d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r10w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r10b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r11")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r11d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r11w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r11b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r12")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r12d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r12w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r12b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r13")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r13d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r13w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r13b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r14")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r14d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r14w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r14b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被调用者保存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%r15")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r15d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r15w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r15b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被调用者保存")])])])]),t._v(" "),a("h3",{attrs:{id:"操作数指示符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作数指示符"}},[t._v("#")]),t._v(" 操作数指示符")]),t._v(" "),a("p",[t._v("大多数指令有一个或多个操作数，指示出执行一个操作中要使用的源数据值。")]),t._v(" "),a("p",[t._v("各种不同的操作数的可能性被分为三种类型。")]),t._v(" "),a("p",[t._v("第一种类型是立即数，用来表示常数值。立即数的书写方式是'$'后跟一个用标准C表示法表示的整数。")]),t._v(" "),a("p",[t._v("第二种类型是寄存器。表示某个寄存器的内容，用符号ra来表示任意寄存器a，用引用R[ra]来表示它的值。")]),t._v(" "),a("p",[t._v("第三种操作数是内存引用。根据计算出来的地址访问某个内存位置。因为将内存看成一个很大的字节数组，我们用符号Mb[Addr]表示对存储在内存种从地址Addr开始的b个字节值的引用。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("操作数值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("名称")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("立即数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("$Imm")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Imm")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("立即数寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("寄存器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("r.a (.表示下标)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[r.a]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("寄存器寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Imm")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[Imm]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("绝对寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(r.a)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[R[r.a]]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("间接寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Imm(r.b)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[Imm+R[r.b]]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(基址+偏移量)寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(r.b,r.i)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[R[r.b] + R[r.i]]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("变址寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Imm(r.b,r.i)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[Imm + R[r.b] + R[r.i]]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("变址寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(,r.i,s)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[R[r.i]*s]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比例变址寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Imm(,r.i,s)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[Imm + R[r.i]*s]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比例变址寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(r.b,r.i,s)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[R[r.b] + R[r.i] * s]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比例变址寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Imm(r.b,r.i,s)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("M[Imm + R[r.b] + R[r.i] * s]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比例变址寻址")])])])]),t._v(" "),a("h3",{attrs:{id:"常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[t._v("#")]),t._v(" 常用指令")]),t._v(" "),a("ol",[a("li",[t._v("数据传送指令")])]),t._v(" "),a("p",[t._v("最简单形式的数据传送指令————MOV类，将数据从一个位置复制到另一个位置的指令。MOV类由四条指令组成：")]),t._v(" "),a("p",[t._v("movb, movw, movl, movq.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("MOV S,D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movb")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送四字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movabsq I, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R ← I")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送绝对的四字")])])])]),t._v(" "),a("p",[t._v("另外还有两类数据移动指令：MOVZ, MOVS. 将较小的源值复制到较大的目的时使用。")]),t._v(" "),a("p",[t._v("MOVZ：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("MOVZ S,R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R ← 零扩展(S)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("以零扩展进行传送")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movzbw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了零扩展的字节传送到字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movzbl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了零扩展的字节传送到双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movzwl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了零扩展的字传送到双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movzbq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了零扩展的字节传送到四字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movzwq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了零扩展的字传送到四字")])])])]),t._v(" "),a("p",[t._v("MOVS")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("MOVS S,R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R ← 符号扩展(S)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("传送符号扩展的字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movsbw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了符号扩展的字节传送到字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movsbl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了符号扩展的字节传送到双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movswl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了符号扩展的字传送到双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movsbq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了符号扩展的字节传送到四字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movswq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了符号扩展的字传送到四字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("movslq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将做了符号扩展的双字传送到四字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cltq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%rax ← 符号扩展(%eax)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("把%eax符号扩展到%rax")])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("入栈，出栈命令")])]),t._v(" "),a("p",[t._v("使用push指令进行入栈")]),t._v(" "),a("p",[t._v("使用pop进行出栈")]),t._v(" "),a("p",[t._v("%rsp保存着栈顶元素的地址。栈向下增长，栈顶元素的地址是所有栈中元素地址中最低的。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("pushq S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[%rsp] ← R[%rsp] - 8; M[R[%rsp]] ← S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将四字压入栈")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("popq D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← M[R[%rsp]];  R[%rsp] ← R[%rsp] + 8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("将四字弹出栈")])])])]),t._v(" "),a("p",[t._v("pushq %rbq的行为等价于：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("subq  $8, %rsp   // 栈顶元素-8\nmovq  %rbq, (%rsp)   //  移动值\n")])])]),a("p",[t._v("popq %rax的行为等价于：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("movq  (%rsp), %rax    // 取出值\naddq  $8, %rsp   // 栈顶元素 +8\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("算术和逻辑操作")])]),t._v(" "),a("p",[t._v("加法指令：add，有addb，addw, addl, addq四条指令，分别是字节加法，字加法，双字加法和四字加法。")]),t._v(" "),a("p",[t._v("减法指令：sub")]),t._v(" "),a("p",[t._v("乘法指令：mul")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("leaq S,D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← &S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("加载有效地址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("INC D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D + 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("加1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("DEC D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D - 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("减1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("NEG D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← -D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取负")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("NOT D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取补")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ADD S, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D + S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("加")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SUB S, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D - S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("减")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("IMUL S, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D * S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("乘")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("XOR S, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D ^ S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("异或")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("OR S, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("S")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("AND S, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D & S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("与")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SAL k, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D << k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("左移")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SHL k, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D << k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("左移(等同于SAL)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SAR k, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D >> k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("算术右移")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SHR k, D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← D >> k")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑右移")])])])]),t._v(" "),a("p",[t._v("其中加载有效地址leaq指令实际上是movq指令的变形。指令形式是从内存读数据到寄存器，但实际上它根本就没有引用内存。如：寄存器%rdx的值为x，leaq 7(%rdx, %rdx, 4), %rax将设置寄存器%rax的值为5x + 7.")]),t._v(" "),a("p",[t._v("一元操作，INC 到 NOT，指的是已有一个操作数，既是源也是目的。这个操作数可以是一个寄存器，也可以是一个内存位置。")]),t._v(" "),a("p",[t._v("二元操作，ADD 到 AND, 第一个操作数是源，第二个操作数既是源又是目的。")]),t._v(" "),a("p",[t._v("移位操作，SAL 到 SHR, 第一个为移位量，第二个为要移位的数。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("特殊的算术操作")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("imulq S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[%rdx]: R[%rax] ← S * R[%rax]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有符号全乘法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("mulq S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[%rdx]: R[%rax] ← S * R[%rax]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无符号全乘法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("clto")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[%rdx] : R[%rax] ← 符号扩展(R[%rax])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("转换为八字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("idivq S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[%rdx] ← R[%rdx] : R[%rax] mod S; R[%rdx] ← R[%rdx] : R[%rax] / S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有符号除法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("divq  S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("R[%rdx] ← R[%rdx] : R[%rax] mod S; R[%rdx] ← R[%rdx] : R[%rax] / S")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无符号除法")])])])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("条件码")])]),t._v(" "),a("p",[t._v("除了整数寄存器，CPU还维护着一组单个位的条件码寄存器。")]),t._v(" "),a("p",[t._v("常用条件码：")]),t._v(" "),a("p",[t._v("CF: 进位标志。最近的操作使最高位产生了进位。可用来检查无符号操作的溢出。")]),t._v(" "),a("p",[t._v("ZF: 零标志。最近的操作得出的结果为0.")]),t._v(" "),a("p",[t._v("SF: 符号标志。最近的操作得到的结果数位负数。")]),t._v(" "),a("p",[t._v("OF：溢出标志。最近的操作导致一个补码溢出。")]),t._v(" "),a("p",[t._v("条件码通常不会直接读取,常用的使用方法有三种:")]),t._v(" "),a("p",[t._v("可以根据条件码的某种组合将一个字节设置位0或1")]),t._v(" "),a("p",[t._v("可以条件跳转到程序的某个其他的部分")]),t._v(" "),a("p",[t._v("可以有条件地传送数据")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("同义名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("设置条件")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("sete D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相等/零")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setne D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不等/非零")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("sets D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← SF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("负数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setns D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~SF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("非负数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setg D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnle")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~(SF ^ OF) & ~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于(有符号>)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setge D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~(SF ^ OF)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于等于(有符号>=)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setl D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnge")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← SF ^ OF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于(有符号<)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setle D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setng")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← (SF ^ OF)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("seta D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnbe")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~CF & ~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("超过(无符号>)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setae D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnb")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← ~CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("超过或相等(无符号>=)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setb D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setnae")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("低于(无符号<)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("setbe D")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("setna")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("D ← CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")])])])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("比较和测试命令")])]),t._v(" "),a("p",[t._v("CMP命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CMP S1,S2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("S2 - S1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比较")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmpb")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比较字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmpw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比较字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmpl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比较双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmpq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("比较四字")])])])]),t._v(" "),a("p",[t._v("TEST命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("效果")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("TEST S1,S2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("S2 & S1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("testb")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("testw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("testl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试双字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("testq")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试四字")])])])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("跳转指令")])]),t._v(" "),a("p",[t._v("常用的跳转指令jmp,无条件跳转")]),t._v(" "),a("p",[t._v("movq  $0, %rax\njmp .L1\nmovq (%rax), %rdx\n.L1:\npopq %rdx")]),t._v(" "),a("p",[t._v("跳过了movq命令.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("同义名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("跳转条件")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jmp Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("直接跳转")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jmp *Operand")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("间接跳转")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("je Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相等/零")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jne Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不相等/非零")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("js Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("负数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jns Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~SF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("非负数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jg Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnle")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~(SF ^ OF) & ~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于(有符号>)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jge Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~(SF ^ OF)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于或等于(有符号>=)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jl Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnge")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SF^OF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于(有符号<)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jle Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jng")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(SF^OF)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ja Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnbe")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~CF&~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("超过(无符号>)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jae Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnb")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("超过或相等(无符号>=)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jb Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jnae")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("低于(无符号<)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("jbe Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("jna")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")])])])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("提交传送指令")])]),t._v(" "),a("p",[t._v("每条指令有两个操作数，源寄存器或内存地址S，和目的寄存器R。只有在条件满足的情况下，才会将寄存器或内存中的值复制到目的寄存器中。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("同义名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("跳转条件")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmove S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相等/零")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovne S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不相等/非零")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovs S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("负数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovns S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~SF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("非负数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovg S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnle")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~(SF ^ OF) & ~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于(有符号>)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovge S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~(SF ^ OF)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于或等于(有符号>=)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovl S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnge")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SF^OF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于(有符号<)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovle S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovng")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(SF^OF)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmova S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnbe")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~CF&~ZF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("超过(无符号>)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovae S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnb")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("~CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("超过或相等(无符号>=)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovb S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovnae")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("低于(无符号<)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovbe S, R")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("cmovna")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("CF")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ZF")])])])]),t._v(" "),a("ol",{attrs:{start:"9"}},[a("li",[t._v("循环")])]),t._v(" "),a("p",[t._v("汇编语言中的循环常使用跳转和判断来代替。")]),t._v(" "),a("ol",{attrs:{start:"10"}},[a("li",[t._v("switch语句")])]),t._v(" "),a("p",[t._v("switch语句可以根据一个整数索引值进行多重分支。c语言为了实现switch，使用的是挑战表这种数据结果。跳转表是一个数组，表项i是一个代码段的地址，这个代码段实现当开关索引值等于i时程序应该采取的动作。汇编代码也是通过地址和跳转表实现。")]),t._v(" "),a("h3",{attrs:{id:"过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),a("p",[t._v("过程时软件中一种很重要的抽象。它提供了一种封装代码的方式，用一组指定的参数和一个可选的返回值实现了某种功能。")]),t._v(" "),a("ol",[a("li",[t._v("运行时栈")])]),t._v(" "),a("p",[t._v("C语言过程调用机制的一个关键特征(大多数其他语言也是如此)在于使用了栈数据结构提供的后进先出的内存管理原则。")]),t._v(" "),a("p",[t._v("x86-64的栈向低地址方向增长，而栈指针%rsp指向栈顶元素。可以用pushq和popq指令将数据存入栈中或是从栈中取出。将栈指针减小一个适当的量可以为没有指定初始值的数据在栈上分配空间。当过程需要的存储空间超出寄存器能够存放的大小时，就会在栈上分配空间。这个部分成为过程的栈帧。其通用结构如下图：")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("转移控制")])]),t._v(" "),a("p",[t._v("调用过程常常需要进行程序计数器(PC)的转移。常用call和ret指令进行。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指令")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("call Label")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("过程调用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("call ·Operand")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("过程调用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ret")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("从过程调用中返回")])])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("数据传送")])]),t._v(" "),a("p",[t._v("参数传递一般使用寄存器，使用寄存器一般传递6个参数，超过6个参数，将使用栈来传递。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("操作数大小(位)")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("第一个参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("第二个参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("第三个参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("第四个参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("第五个参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("第六个参数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("64")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%rdi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%rsi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%rdx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%rcx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("32")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%edi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%esi")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%edx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%ecx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9d")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%di")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%si")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%dx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%cx")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9w")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%dil")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%sil")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%dl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%cl")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r8b")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%r9b")])])])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("栈上的局部存储")])]),t._v(" "),a("p",[t._v("某些局部变量必须存放在内存中。常见的情况包括：")]),t._v(" "),a("p",[t._v("寄存器不足够存放所有的本地数据。")]),t._v(" "),a("p",[t._v("对一个局部变量使用地址运算符'&'，因此必须能够为它产生一个地址。")]),t._v(" "),a("p",[t._v("某些局部变量是数组或结构，必须能够通过数组或结构引用被访问到。")]),t._v(" "),a("h3",{attrs:{id:"数组的分配和访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的分配和访问"}},[t._v("#")]),t._v(" 数组的分配和访问")]),t._v(" "),a("p",[t._v("数组是一种将标量数据聚集成更大数据类型的方式。长分配一连串的地址。")]),t._v(" "),a("h3",{attrs:{id:"指针运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指针运算"}},[t._v("#")]),t._v(" 指针运算")]),t._v(" "),a("p",[t._v("如果p是一个执行类型位T的数据的指针，p的值位x，那么表达式p + i的值为x + L * i,这里的L是数据类型T的大小。")]),t._v(" "),a("p",[t._v("单操作数操作符'&'和'*'可以产生指针和间接引用指针。即对于一个表示某个对象的表达式Expr，&Expr是给出该对象地址的一个指针。对于一个表示地址的表达式AExpr，"),a("em",[t._v("AExpr是给出该地址的值。因此Expr和")]),t._v(" &Expr是等价的。数组引用A[i] 等同于表达式 * (A + i)。它计算第i个数组元素的地址，然后访问这个内存地址。")]),t._v(" "),a("h3",{attrs:{id:"异质的数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异质的数据结构"}},[t._v("#")]),t._v(" 异质的数据结构")]),t._v(" "),a("p",[t._v("C语言提供了两种将不同类型的对象组合到一起创建数据类型的机制：结构(strcture),用关键字struct来声明，将多个对象集合到一个单位中；联合(union),用关键字union来声明，允许用几种不同的类型来引用一个对象。\n类似于数组的实现。")]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("第三章主要讲了汇编代码和汇编的一些基础命令。同时通过c语言的一些代码来解释汇编代码。")]),t._v(" "),a("h2",{attrs:{id:"第四章-处理器体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-处理器体系结构"}},[t._v("#")]),t._v(" 第四章 处理器体系结构")]),t._v(" "),a("h3",{attrs:{id:"y86-64指令集体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#y86-64指令集体系结构"}},[t._v("#")]),t._v(" Y86-64指令集体系结构")]),t._v(" "),a("p",[t._v("定义一个指令集体系结构，包括定义各种状态单元，指令集和它们的编码，一组编程规范和异常事件处理。")]),t._v(" "),a("p",[t._v("图4.1表示程序员可见状态。表示程序可以访问和修改这些值。")]),t._v(" "),a("p",[t._v("图4.2表示Y86-64的指令集。Y86-64指令基本上是x86-64指令集的子集，只包含8字节整数操作，寻址方式比较少，操作也比较少。")]),t._v(" "),a("p",[t._v('x86-64有时称为"复杂指令集计算机"(CISC),与"精简指令集计算机"(RISC)相对。')]),t._v(" "),a("p",[t._v("CISC和RISC的比较")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("CISC")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("早期的RISC")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("指令数量很多，Intel描述全套指令的文档有1200多页")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指令数量少得多，通常少于100个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("有些指令的延迟很长，包括将一个整块从内存的一个部分复制到另一部分的指令，以及其他一些将多个寄存器的值复制到内存或从内存复制到多个寄存器的指令")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("没有较长延迟的指令，有些早期的RISC机器甚至没有整数乘法指令，要求编译器通过一系列加法来实现乘法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("编码是可变长度的，x86-64的指令长度可以是1-15个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("编码是固定长度的，通常所有的指令都编码为4个字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("指令操作数的方式很多样，在x86-64中，内存操作数指令符可以有许多不同的组合，这些组合有偏移量基址和变址寄存器以及伸缩因子组成")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("简单寻址方式，通常只有基址和偏移量寻址")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("可以对内存和寄存器操作数进行算术和逻辑运算")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("只能对寄存器操作数进行算术和逻辑运算。允许使用内存引用的只有load和store指令，load是从内存读到寄存器，store是从寄存器写到内存，这种方法被称为load/store体系结构")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("对机器级程序来说实现细节是不可见的。ISA提供了程序和如何执行程序之间的清晰的抽象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("对机器程序来说实现细节是不可见的。有些RISC机器指令进制某些特殊的指令序列，而有些跳转要到下一条指令执行完了以后才会生效")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("有条件码。")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("没有条件码，对于条件检测来说，要用明确的测试指令，这些指令会将测试结构放在一个普通的寄存器")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("栈密集的过程链接。栈被用来存取过程参数和返回地址")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("寄存器密集的过程链接。寄存器被用来存取过程参数和返回地址")])])])]),t._v(" "),a("p",[t._v("对Y86-64来说，程序员可见状态包括了状态码Stat，描述程序执行的总体状态。可能值如图4.5所示。")])])}),[],!1,null,null,null);e.default=_.exports}}]);