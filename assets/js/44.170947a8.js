(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{538:function(t,e,v){"use strict";v.r(e);var _=v(4),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"zookeeper简单介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper简单介绍"}},[t._v("#")]),t._v(" Zookeeper简单介绍")]),t._v(" "),v("p",[t._v("zookeeper主要用于管理，进行分布式之间客户端的管理。")]),t._v(" "),v("p",[t._v("znode节点，Zookeeper中数据基本单元叫做节点，节点之下包含子节点，最后以树级方式呈现。每个节点拥有唯一路径path。客户端基于Path上传节点数据，zookeeper收到后会实时通知对该路径进行监听的客户端。")]),t._v(" "),v("p",[t._v("场景：锁，job，配置，服务注册等。")]),t._v(" "),v("h3",{attrs:{id:"客户端命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#客户端命令"}},[t._v("#")]),t._v(" 客户端命令")]),t._v(" "),v("p",[t._v("close 关闭当前会话")]),t._v(" "),v("p",[t._v("connect 连接")]),t._v(" "),v("p",[t._v("create 创建节点")]),t._v(" "),v("p",[t._v("delete 删除节点")]),t._v(" "),v("p",[t._v("deleteall 删除节点")]),t._v(" "),v("p",[t._v("get 获取节点")]),t._v(" "),v("p",[t._v("getAcl 获取权限配置")]),t._v(" "),v("h3",{attrs:{id:"zookeeper节点介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper节点介绍"}},[t._v("#")]),t._v(" Zookeeper节点介绍")]),t._v(" "),v("ol",[v("li",[t._v("节点类型")])]),t._v(" "),v("p",[t._v("a). PERSISTENT   持久化节点  使用 create 创建")]),t._v(" "),v("p",[t._v("b). PERSISTENT_SEQUENTIAL   持久序号节点  使用 create -s 创建，后加序号。")]),t._v(" "),v("p",[t._v("c). EPHEMERAL    临时节点(不可拥有子节点)  使用 create -e 创建")]),t._v(" "),v("p",[t._v("d). EPHEMERAL_SEQUENTIAL   临时序号节点(不可拥有子节点) 使用 create -e -s 创建，后加序号。")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("查询节点属性")])]),t._v(" "),v("p",[t._v("stat /")]),t._v(" "),v("p",[t._v("节点属性表如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("字段")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("cZxid")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("创建节点的事务id")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("ctime")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("创建时间")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("mZxid")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("修改节点的事务id")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("mtime")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("最后修改时间")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("pZxid")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("子节点变更的事务id")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("cversion")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("表示对此znode的子节点进行的更改次数(不包括子节点)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("dataVersion")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("数据版本，变更次数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("aclVersion")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("权限版本，变更次数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("ephemeralOwner")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("临时节点所属会话id")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("dataLength")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("数据长度")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("numChildren")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("子节点数(不包含子子节点)")])])])]),t._v(" "),v("p",[t._v("客户端使用 -w 可以对服务端进行监听")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("acl权限设置")])]),t._v(" "),v("p",[t._v("ACL全程Access Control List(访问控制列表)。Zookeeper使用ACL来控制对其znode的访问。基于scheme🆔permission的方式进行权限控制。scheme表示授权模式，id模式对应值，permission即具体的增删改权限位。")]),t._v(" "),v("p",[t._v("a). scheme：认证模式")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("方案")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("world")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("开放模式，全世界都可以访问")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("ip")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("ip模式，限定客户端ip访问")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("auth")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("用户密码认证模式，只有在会话中添加了认证才可以访问")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("digest")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("与auth相似，区别在于auth为铭文密码，digest使用了sha-1 + base64加密后的密码")])])])]),t._v(" "),v("p",[t._v("b). permission权限位")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("权限位")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("权限")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("c")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("CREATE")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可以创建子节点")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("d")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("DELETE")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可以删除子节点")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("r")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("READ")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可以读取节点数据及显示子节点列表")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("w")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("WRITE")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可以设置节点数据")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("a")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("ADMIN")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("可以设置节点访问控制列表权限")])])])]),t._v(" "),v("p",[t._v("c). acl相关命令")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("命令")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("使用方法")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("getAcl")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("getAcl "),v("path")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("读取ACL权限")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("setAcl")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("setAcl "),v("path",[v("acl")],1)]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("设置ACL权限")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("addauth")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("addauth "),v("scheme",[v("auth")],1)],1),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("添加认证用户")])])])]),t._v(" "),v("h3",{attrs:{id:"常用api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用api"}},[t._v("#")]),t._v(" 常用api")]),t._v(" "),v("p",[t._v("a). 构造参数")]),t._v(" "),v("p",[t._v("connectString: 连接地址+端口")]),t._v(" "),v("p",[t._v("sessionTimeout: 会话超时时间，该值不能超过服务端所设置的minSessionTimeout和maxSessionTimeout")]),t._v(" "),v("p",[t._v("watcher：会话监听器，服务端时间将会触发该监听")]),t._v(" "),v("p",[t._v("sessionId： 自定义会话id")]),t._v(" "),v("p",[t._v("sessionPasswd： 会话密码")]),t._v(" "),v("p",[t._v("canBeReadOnly： 连接是否为只读的")]),t._v(" "),v("p",[t._v("aHostProvider：服务端地址提供者，指示客户端如何选择某个服务来调用。")]),t._v(" "),v("h3",{attrs:{id:"zookeeper集群"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper集群"}},[t._v("#")]),t._v(" zookeeper集群")]),t._v(" "),v("p",[t._v("主要用于读写分离和主从自动切换，集群至少三台，且最好使用奇数台机器。")]),t._v(" "),v("p",[t._v("配置语法：server: <节点ID>="),v("IP",[t._v(":<数据同步端口>:<选举端口>")])],1),t._v(" "),v("p",[t._v("a). 节点ID: 服务id手动指定1至125之间的数字，并写道对应服务节点的{dataDir}/myid文件中")]),t._v(" "),v("p",[t._v("b). IP地址：节点的远程IP地址，可以相同，但生成环境就不能这么做了，因为在同一台机器就无法达到容错的目的。")]),t._v(" "),v("p",[t._v("c). 数据同步端口：主从同时数据复制端口")]),t._v(" "),v("p",[t._v("d). 选举端口：主从节点选举端口")]),t._v(" "),v("ol",[v("li",[t._v("集群角色说明")])]),t._v(" "),v("p",[t._v("共有三个角色：leader(主节点)，follower(子节点)，observer(次级子节点)")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("角色")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("leader")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("主节点，又名领导者，用于写入数据，通过选举产生，如果宕机将会选举新的主节点")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("follower")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("子节点，又名追随者。用于实现数据的读取，同时他也是主节点的备选节点，并拥有投票权")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("observer")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("次级子节点，又名观察者，用于读取数据，与follower区别在于没有投票权。")])])])]),t._v(" "),v("p",[t._v("observer配置： server.3=127.0.0.1:2889:3889:observer")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("选举机制")])]),t._v(" "),v("p",[t._v("a). 第一轮投票都投给自己。")]),t._v(" "),v("p",[t._v("b). 第二轮投给myid比自己大的相邻节点。如果超过半数，则选举结束。")]),t._v(" "),v("p",[t._v("选举触发：")]),t._v(" "),v("p",[t._v("a). 服务节点初始化启动")]),t._v(" "),v("p",[t._v("b). 半数以上的节点无法和Leader建立连接")]),t._v(" "),v("p",[t._v("服务启动状态时会在集群中寻找leader，如果找到则与leader建立连接，自身状态变成follower或者observer。当前节点状态变化为LOOKING,进入选举流程。")]),t._v(" "),v("p",[t._v("在集群运行期间如果有follow或observer节点宕机，只要不超过半数并不会影响整个集群服务的正常运行。但如果leader宕机，将暂停对外服务，所有follower将进入LOOKING状态，进行选举。")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("数据同步机制")])]),t._v(" "),v("p",[t._v("一个是正常的客户端写入流程，另一个是新节点或者重新启动加入时的数据同步。")]),t._v(" "),v("p",[t._v("a). 如果客户端将消息发送给follower，该follower会信息发送给leader，leader会发送proposal请求消息给所有follower，然后follower发送ACK确认消息给leader，如果收到超过一般的follower发送了ack，leader会发送commit消息给所有follower。")]),t._v(" "),v("p",[t._v("b). 需要先找leader，然后把数据进行同步。通过ZXID事务ID进行比较来确认是否需要数据同步。ZXID是一个长度为64位的数字。低32位是按数字递增。任何数据的变更都会导致，低32位的数字简单加1。高32位leader周期编导，每当选举出一个新的leader时，新的leader就从本地事务日志中取出ZXID，然后解析出高32位的周期编导，进行加1，再将低32位的全部设置为0. 保证每次选举leader后，ZXID的唯一性并且时递增的。")]),t._v(" "),v("h3",{attrs:{id:"zookeeper-典型使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-典型使用场景"}},[t._v("#")]),t._v(" zookeeper 典型使用场景")]),t._v(" "),v("ol",[v("li",[t._v("分布式集群管理")])]),t._v(" "),v("p",[t._v("a). 主动查看线上服务节点")]),t._v(" "),v("p",[t._v("b). 查看服务节点资源使用情况")]),t._v(" "),v("p",[t._v("c). 服务离线通知")]),t._v(" "),v("p",[t._v("d). 服务资源(CPU, 内存，硬盘)超出阈值通知")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("分布式注册中心")])]),t._v(" "),v("p",[t._v("a). 服务注册：提供者上线时将自提供的服务提交给注册中心")]),t._v(" "),v("p",[t._v("b). 服务注销：将服务下线")]),t._v(" "),v("p",[t._v("c). 服务订阅：动态实时接收服务变更消息")]),t._v(" "),v("p",[t._v("d). 可靠：注册服务本身是集群的，数据冗余存储。避免单点故障，及数据丢失")]),t._v(" "),v("p",[t._v("e). 容错：当服务器提供者出现宕机，断电等情况时，注册中心能动态感知并通知客户端服务提供者的状态。")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("分布式JOB")])]),t._v(" "),v("p",[t._v("保证每个时间点只有一个节点运行job，使用主从。")]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[t._v("分布式锁")])]),t._v(" "),v("p",[t._v("a). 创建临时序号节点(标识为读)")]),t._v(" "),v("p",[t._v("b). 获取所有序号比自己小的节点")]),t._v(" "),v("p",[t._v("c). 判断是否全部为读节点")]),t._v(" "),v("p",[t._v("d). 如果是则获取成")]),t._v(" "),v("p",[t._v("e). 否则添加子节点变更监听，进行链表监听，监听前一个节点。")]),t._v(" "),v("h3",{attrs:{id:"核心源码解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#核心源码解析"}},[t._v("#")]),t._v(" 核心源码解析")]),t._v(" "),v("p",[t._v("主要是 zookeeper-server")]),t._v(" "),v("p",[t._v("集群启动：QuorumPeerMain")]),t._v(" "),v("p",[t._v("启动&加载配置：QuorumPeerMain")]),t._v(" "),v("p",[t._v("初始化外对服务：SeverCnxnFactory，网络编程(Netty)")]),t._v(" "),v("p",[t._v("初始化内存数据库：ZKDatabase")]),t._v(" "),v("p",[t._v("初始化会话管理器：SessionTrackerImpl")]),t._v(" "),v("p",[t._v("初始选举：FastLeaderElection")]),t._v(" "),v("p",[t._v("单机启动：ZookeeperServerMain")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("QuorumPeer  // 检查服务状态\n\nFileTxnSnapLog  // 构建日志管理器，检查dataDir，事务日志目录 snapDir快照目录\n\nFileTxnLog  // 读写事务日志文件\n\nFileSnap  // 读写快照\n\n")])])]),v("p",[t._v("a). 启动流程堆栈")]),t._v(" "),v("p",[t._v("单机：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("1. 获取config配置\n\n2. 解析config配置，并进行赋值\n\n3. 构造一个数据清理器，主要用于清理快照。\n\n4. 创建服务工厂嘞，初始化对外服务，启动一个Nio，可以设置为Netty\n\n5. 启动服务。加载数据，启动netty服务，启动admin，启动选举\n\n")])])]),v("p",[t._v("b). 快照与事务日志存储结构")]),t._v(" "),v("p",[t._v("事务日志：每次增删改的记录都会保存在文件中")]),t._v(" "),v("p",[t._v("快照日志，存储了指定时间下的所有数据")])])}),[],!1,null,null,null);e.default=a.exports}}]);